version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: 'kotlin20poc-zookeeper'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      kotlin20poc-net:
        ipv4_address: 10.5.0.2

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: 'kotlin20poc-kafka'
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      kotlin20poc-net:
        ipv4_address: 10.5.0.3

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: 'kotlin20poc-kafdrop'
    requires:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    networks:
      kotlin20poc-net:
        ipv4_address: 10.5.0.4

  kotlin20poc:
    container_name: 'kotlin20poc'
    requires:
      - zookeeper
      - kafka
      - kafdrop
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      KAFKA_URL: kafka
    networks:
      kotlin20poc-net:
        ipv4_address: 10.5.0.5

networks:
  kotlin20poc-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16